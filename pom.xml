<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>guru.springframework</groupId>
	<artifactId>spring-boot-docker</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>spring-boot-docker</name>
	<description>Spring Framework Guru Docker Course</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.5.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<docker-maven-plugin.version>0.33.0</docker-maven-plugin.version>

		<!-- Set this to your docker acct name-->
		<docker.image.prefix>ernestoacostacuba</docker.image.prefix>

		<!-- Set to name of project-->
		<docker.image.name>docker.io</docker.image.name>

		<maven.release.plugin.version>2.5.3</maven.release.plugin.version>
		<project.scm.id>ernestoacostacuba@yahoo.com.mx</project.scm.id>
	</properties>

	<scm>
		<connection>scm:git:https://github.com/docker-4-java/spring-boot-docker.git</connection>
		<developerConnection>scm:git:https://github.com/docker-4-java/spring-boot-docker.git</developerConnection>
		<tag>0.0.1</tag>
	</scm>

	<repositories>
		<repository>
			<id>localDeploy</id>
			<url>file:///home/eara/Documenti/Corsi/SpringBoot/releases</url>
		</repository>
	</repositories>

	<distributionManagement>
		<site>
			<id></id>
			<url>https://github.com/docker-4-java/spring-boot-docker.git</url>
		</site>
	</distributionManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>

		<!--testing deps-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!--Fabric8 Docker Maven plugin-->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker-maven-plugin.version}</version>

				<configuration>
					<dockerHost>http://127.0.0.1:2375</dockerHost>
					<verbose>true</verbose>

					<images>
						<image>
							<name>${docker.image.prefix}/${docker.image.name}</name>
							<build>
								<dockerFileDir>${project.basedir}/src/main/docker/</dockerFileDir>

								<!-- Copies artifact to docker build dir in target-->
								<assembly>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
								<tags>
									<tag>latest</tag>
									<tag>${project.version}</tag>
								</tags>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven.release.plugin.version}</version>
				<configuration>
					<releaseProfiles>release</releaseProfiles>
					<!--
					<preparationGoals>clean verify</preparationGoals>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<tagNameFormat>@{project.version}</tagNameFormat>-->
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>${docker-maven-plugin.version}</version>
						<configuration>
							<images>
								<image>
									<name>${docker.image.prefix}/${docker.image.name}</name>
									<build>
										<dockerFileDir>${project.basedir}/src/main/docker/</dockerFileDir>

										<!-- Copies artifact to docker build dir in target-->
										<assembly>
											<descriptorRef>artifact</descriptorRef>
										</assembly>
										<tags>
											<tag>latest</tag>
											<tag>${project.version}</tag>
										</tags>
									</build>
								</image>
							</images>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
